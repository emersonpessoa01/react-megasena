{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\emersonpessoa\\\\Documents\\\\GitHub\\\\igti-bootcamp-fullstack\\\\modulo03-React\\\\hooks\\\\react-megasena\\\\src\\\\SixNumbers.js\";\nimport React from \"react\";\nexport default function SixNumbers({\n  numbers\n}) {\n  if (numbers.length === 0) {\n    return null;\n  }\n\n  const sortedNumbers = numbers.sort((a, b) => a - b);\n  const textNumbers = sortedNumbers.map(number => {\n    return number.toString().padStart(2);\n  }).join(\" \");\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, \"N\\xFAmeros sorteados: \"), \" \", textNumbers));\n}","map":{"version":3,"sources":["C:/Users/emersonpessoa/Documents/GitHub/igti-bootcamp-fullstack/modulo03-React/hooks/react-megasena/src/SixNumbers.js"],"names":["React","SixNumbers","numbers","length","sortedNumbers","sort","a","b","textNumbers","map","number","toString","padStart","join"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe,SAASC,UAAT,CAAoB;AAAEC,EAAAA;AAAF,CAApB,EAAiC;AAC9C,MAAIA,OAAO,CAACC,MAAR,KAAmB,CAAvB,EAA0B;AACxB,WAAO,IAAP;AACD;;AACD,QAAMC,aAAa,GAAGF,OAAO,CAACG,IAAR,CAAa,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,GAAGC,CAA3B,CAAtB;AACA,QAAMC,WAAW,GAAGJ,aAAa,CAACK,GAAd,CAAkBC,MAAM,IAAE;AAC5C,WAAOA,MAAM,CAACC,QAAP,GAAkBC,QAAlB,CAA2B,CAA3B,CAAP;AACD,GAFmB,EAEjBC,IAFiB,CAEZ,GAFY,CAApB;AAIA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,OACwCL,WADxC,CADF,CADF;AAOD","sourcesContent":["import React from \"react\";\r\n\r\nexport default function SixNumbers({ numbers }) {\r\n  if (numbers.length === 0) {\r\n    return null;\r\n  }\r\n  const sortedNumbers = numbers.sort((a, b) => a - b);\r\n  const textNumbers = sortedNumbers.map(number=>{\r\n    return number.toString().padStart(2,)\r\n  }).join(\" \");\r\n\r\n  return (\r\n    <div>\r\n      <p>\r\n        <strong>NÃºmeros sorteados: </strong> {textNumbers}\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}